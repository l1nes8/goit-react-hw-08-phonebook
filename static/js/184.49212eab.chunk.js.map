{"version":3,"file":"static/js/184.49212eab.chunk.js","mappings":"oPAmEA,UA3DqB,WACnB,OAKIA,EAAAA,EAAAA,MAJFC,EADF,EACEA,SACAC,EAFF,EAEEA,aACAC,EAHF,EAGEA,MACaC,EAJf,EAIEC,UAAaD,OAETE,GAAWC,EAAAA,EAAAA,MAOjB,OACE,kBAAMC,SAAUN,GAND,SAAAO,GACfH,GAASI,EAAAA,EAAAA,IAAcD,IACvBN,GACD,IAGC,WACE,8BACE,SAAC,IAAD,UAAW,YACX,SAAC,EAAAQ,GAAD,gBACEC,KAAK,KACLC,MAAM,QACNC,QAAQ,UACJb,EAAS,QAAS,CAAEc,UAAU,KAJpC,IAKEC,KAAK,WAENZ,EAAOa,QACN,SAAC,KAAD,UAAgB,+BAGpB,8BACE,SAAC,IAAD,UAAW,WACX,SAAC,EAAAN,GAAD,gBACEC,KAAK,KACLC,MAAM,QACNC,QAAQ,UACJb,EAAS,OAAQ,CAAEc,UAAU,KAJnC,IAKEC,KAAK,UAENZ,EAAOc,OAAQ,0BAAM,+BAExB,8BACE,SAAC,IAAD,UAAW,eACX,SAAC,EAAAP,GAAD,gBACEC,KAAK,KACLC,MAAM,QACNC,QAAQ,UACJb,EAAS,WAAY,CAAEc,UAAU,EAAMI,UAAW,KAJxD,IAKEH,KAAK,cAENZ,EAAOgB,WAAY,0BAAM,+BAG5B,mBAAQC,UAAWC,EAAAA,EAAAA,mBAAwBN,KAAK,SAAhD,SAAyD,cAK9D,C","sources":["components/Register.js"],"sourcesContent":["import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { registerThunk } from 'redux/authReducer';\nimport { useForm } from 'react-hook-form';\nimport css from 'form.module.css';\nimport { FormLabel, FormHelperText } from '@chakra-ui/react';\nimport { Input } from '@chakra-ui/react';\n\nconst RegisterPage = () => {\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm();\n  const dispatch = useDispatch();\n\n  const onSubmit = data => {\n    dispatch(registerThunk(data));\n    reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <label>\n        <FormLabel>Email:</FormLabel>\n        <Input\n          size=\"md\"\n          width=\"240px\"\n          variant=\"filled\"\n          {...register('email', { required: true })}\n          type=\"email\"\n        />\n        {errors.email && (\n          <FormHelperText>This field is required</FormHelperText>\n        )}\n      </label>\n      <label>\n        <FormLabel>Name:</FormLabel>\n        <Input\n          size=\"md\"\n          width=\"240px\"\n          variant=\"filled\"\n          {...register('name', { required: true })}\n          type=\"text\"\n        />\n        {errors.name && <span>This field is required</span>}\n      </label>\n      <label>\n        <FormLabel>Password:</FormLabel>\n        <Input\n          size=\"md\"\n          width=\"240px\"\n          variant=\"filled\"\n          {...register('password', { required: true, minLength: 7 })}\n          type=\"password\"\n        />\n        {errors.password && <span>This field is required</span>}\n      </label>\n\n      <button className={css.loginAndRegisteBtn} type=\"submit\">\n        Sign Up\n      </button>\n    </form>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["useForm","register","handleSubmit","reset","errors","formState","dispatch","useDispatch","onSubmit","data","registerThunk","I","size","width","variant","required","type","email","name","minLength","password","className","css"],"sourceRoot":""}